[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[project]
name = "psqlpy"
requires-python = ">=3.8"
keywords = [
    "postgresql",
    "psql",
    "async-driver",
    "psql-driver",
    "postgresql-driver",
    "python-driver",
]
classifiers = [
    "Typing :: Typed",
    "Topic :: Database",
    "Development Status :: 4 - Beta",
    "Programming Language :: Rust",
    "Programming Language :: Python",
    "Operating System :: MacOS",
    "Operating System :: Microsoft",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Developers",
    "Topic :: Database :: Front-Ends",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
authors = [{ email = "askiselev00@gmail.com" }, { name = "Kiselev Aleksandr" }]
maintainers = [{ name = "Kiselev Aleksandr", email = "askiselev00@gmail.com" }]
description = "Async PostgreSQL driver for Python written in Rust"
dynamic = ["version"]

[tool.maturin]
python-source = "python"
module-name = "psqlpy._internal"
features = ["pyo3/extension-module"]

[project.urls]
homepage = "https://github.com/psqlpy-python/psqlpy"
repository = "https://github.com/psqlpy-python/psqlpy"
documentation = "https://psqlpy-python.github.io/"

[tool.mypy]
strict = true
mypy_path = "python"
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = false
warn_unused_ignores = false

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 89
exclude = [".venv/", "psqlpy-stress"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "EM",
    "FBT",
    "TRY003",
    "D1",
    "D203",
    "D213",
    "G004",
    "FA",
    "ANN401",
    "PLR0913",
    "E721",
    "A002",
    "S311",
]

[tool.ruff.per-file-ignores]
"python/psqlpy/*" = ["PYI021"]
"python/tests/*" = [
    "S101", # Use of assert detected
    "S608", # Possible SQL injection vector through string-based query construction
    "D103", # Missing docstring in public function
    "S311", # Standard pseudo-random generators are not suitable for security/cryptographic purposes
]
"python/psqlpy/_internal/exceptions.pyi" = [
    "D205",
    "RUF002",
]
"./psqlpy-stress/psqlpy_stress/migrations/env.py" = ["INP001"]
"examples/*" = ["INP001"]

[tool.ruff.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[project.entry-points."sqlalchemy.dialects"]
psqlpy = "psqlpy_sqlalchemy.dialect:PSQLPyAsyncDialect"
